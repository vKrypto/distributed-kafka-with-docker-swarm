version: '3.8'

networks:
  kafka_broker_net:
    driver: overlay
    ipam:
      config:
      - subnet: 10.10.10.0/24
    attachable: true

volumes:
  kafka_data1:
    driver: local
  kafka_data3:
    driver: local
  kafka_data2:
    driver: local
  zookeeper_data:
    driver: local

services:

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: kafka_zookeeper
    environment:
    - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      kafka_broker_net:
        ipv4_address: 10.10.10.10
    # volumes:
    # - zookeeper_data:/bitnami/zookeeper
    deploy:
      placement:
        constraints: [ node.role == manager ]

  kafka1:
    image: bitnami/kafka:3.6.1
    container_name: kafka_broker
    environment:
    - KAFKA_CFG_BROKER_ID=1
    - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
    - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092
    - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
    - KAFKA_CFG_NUM_PARTITIONS=50
    - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    - ALLOW_PLAINTEXT_LISTENER=yes
    - KAFKA_KRAFT_MODE_ENABLED=false
    networks:
      kafka_broker_net:
        ipv4_address: 10.10.10.20
    # volumes:
    # - kafka_data1:/bitnami/kafka
    depends_on:
    - zookeeper
    deploy:
      placement:
        constraints: [ node.role == manager ]

  kafka_ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui
    environment:
    - KAFKA_CLUSTERS_0_NAME=local-cluster
    # - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=10.10.10.20:9092
    # - KAFKA_CLUSTERS_0_ZOOKEEPER=10.10.10.10:2181
    ports:
    - "8080:8080"
    networks:
      kafka_broker_net:
        ipv4_address: 10.10.10.30
    depends_on:
    - kafka
    deploy:
      placement:
        constraints: [ node.role == manager ]
